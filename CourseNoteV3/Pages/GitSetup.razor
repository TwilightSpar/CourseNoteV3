@page "/GitSetup"

<body>

    <div class="container-fluid">
        <main class="tm-main">
            <div class='typora-export-content'>
                <div id='write' class=''>
                    <h1 id='git-and-github-command-demo'><span>Git and GitHub command demo</span></h1>
                    <h2 id='by-creating-a-git-repository-you-have-two-ways'><span>By creating a git repository, you have
                            two
                            ways</span></h2>
                    <ul>
                        <li><span>create on your local computer, </span><code>git init</code></li>
                        <li><span>clone a repository from GitHub, </span><code>git clone</code></li>
                    </ul>
                    <p>&nbsp;</p>
                    <p><code>git init</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>Initialized empty Git repository in C:/Users/GitHubSetUpDemp/.git/</span></p>
                    </blockquote>
                    <p>&nbsp;</p>
                    <p><code>git clone https://github.com/TwilightSpar/GitHubSetUpDemo.git</code></p>
                    <p><span>If you are using </span><code>git init</code><span>, you will need to connect your branch
                            to the
                            remote one on GitHub</span></p>
                    <figure>
                        <table>
                            <thead>
                                <tr>
                                    <th style='text-align:center;'><span>local</span></th>
                                    <th style='text-align:center;'><span>origin(GitHub)</span></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td style='text-align:center;'><span>main</span></td>
                                    <td style='text-align:center;'><span>origin/[BranchName(default: main)]</span></td>
                                </tr>
                                <tr>
                                    <td style='text-align:center;'><span>brach_1_local</span></td>
                                    <td style='text-align:center;'><span>branch_1_remote</span></td>
                                </tr>
                                <tr>
                                    <td style='text-align:center;'><span>brach_1_local_new</span></td>
                                    <td style='text-align:center;'><span>brach_1_remote_new</span></td>
                                </tr>
                            </tbody>
                        </table>
                    </figure>
                    <p><span>origin is a remote repository name, you can name it to &quot;GitHub&quot; or anything,
                            default is
                            origin </span></p>
                            <p><span>origin repository has the url of </span><a href='https://github.com/' target='_blank'
                            class='url'>https://github.com/</a><span> [username] / [RepoName]</span>
                    </p>
                    <p><span>First, use </span><code>git config –global user.name &quot;[name]&quot;</code><span>
                        </span></p>
                    <p><span>and </span><code>git config –global user.email &quot;[email address]&quot;</code><span> to
                            login
                            to your GitHub account</span>
                    </p>
                    <p><span>Then, use to </span><code>git remote add origin [Remote Server Link]</code><span>, to
                            connect your
                            local repository to the remote server</span></p>
                    <p><span>Now you can see, the GitHub have the origin repository:</span></p>
                    <p><code>git remote</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>origin</span></p>
                    </blockquote>
                    <p><span>Then, use </span><code>git push -u &lt;remote-branch&gt;</code><span> to update the remote
                            branch
                        </span></p>
                    <h2 id='make-changes'><span>Make changes</span></h2>
                    <p><span>This picture(<a href="https://fabacademy.org/2018/labs/fablabyachay/students/enriquedavid-ariasmoscoso/projectmanagement.html">fabacademy</a>) explains all basic files change commands</span></p>
                    <img src="img/zBb51.png"
                        alt="git process" style="zoom: 50%;" />
                    <p><span>First, we create a file and commit the changes. We can use </span><code>status</code><span>
                            and
                        </span><code>diff</code><span> to shows the file changes and differences which are not yet
                            staged.</span></p>
                    <h4 id='create-new-file-and-write-sth'><span>create new file and write sth</span></h4>
                    <p><code>echo change 1 &gt; filename.txt</code></p>
                    <h4 id='show-difference'><span>show difference</span></h4>
                    <p><code>git diff</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>diff --git a/demo.ipynb b/demo.ipynb</span></p>
                        <p> <span>index 353a544..500fea0 100644</span></p>
                        <p> <span>--- a/demo.ipynb</span></p>
                        <p> <span>+++ b/demo.ipynb</span>
                        </p>
                    </blockquote>
                    <h4 id='stage-the-changes'><span>stage the changes</span></h4>
                    <p><code>git add .</code></p>
                    <h4 id='commit-the-changes'><span>commit the changes</span></h4>
                    <p><code>git commit -m &quot;commit 1&quot;</code></p>
                    <h4 id='stash-changes'><span>Stash changes</span></h4>
                    <p><span>When you want to record the current state of the working directory and the index, but want
                            to go
                            back to a clean working directory. The </span><code>stash</code><span> command saves your
                            local
                            modifications away and reverts the working directory to match the HEAD commit.</span></p>
                    <p><code>echo change 2 &gt; filename2.txt</code>
                        <code>git add .</code>
                        <code>git status</code>
                    </p>
                    <p><span>output:</span></p>
                    <blockquote>
                        <p><span>Changes to be committed:</span></p>
                        <p> <span>(use &quot;git restore --staged </span></p>
                        <p>
                            <span>...&quot; to unstage)</span>
                        </p>
                        <p> <span> new file: filename2.txt</span>
                        </p>
                    </blockquote>
                    <p><span>Now use </span><code>stash</code><span>, this will save all uncommitted file into some
                            where else,
                            give you a clean working directory</span></p>
                    <p><span>output:</span></p>
                    <blockquote>
                        <p><code>nothing to commit, working tree clean</code></p>
                    </blockquote>
                    <p><span>If we want to get back the stashed files:</span></p>
                    <p><code>git stash apply</code><span> will give back the changes, but the stashed file still
                            saved.</span>
                        <span>we can use </span><code>git stash drop</code><span> to drop the stashed files</span>
                        <code>git stash pop</code><span> = </span><code>git stash apply</code><span> +
                        </span><code>git stash drop</code>
                    </p>
                    <h2 id='branch-basic'><span>Branch basic </span></h2>
                    <h4 id='see-local-branches'><span>see local branches</span></h4>
                    <p><code>git branch</code><span> </span></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>*</span><span> master</span></p>
                    </blockquote>
                    <h4 id='create-new-branch-and-switch-to-it'><span>create new branch and switch to it</span></h4>
                    <p><code>git checkout -b branch_1_local</code><span> </span></p>
                    <p><code>git branch</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>*</span><span> branch_1_local</span></p>
                        <p> <span>master</span>
                        </p>
                    </blockquote>
                    <h4 id='push-changes'><span>push changes</span></h4>
                    <p><span>Now I create a new branch and am in branch_1_local. To push these change to GitHub
                            run:</span></p>
                    <p><code>git branch -r</code><span> # -r see remote branch</span></p>
                    <p><code>git push -u origin branch_1_local:branch_1_remote</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>remote: Resolving deltas: 100% (1/1), done.</span></p>
                        <p><span>To </span><a href='https://github.com/TwilightSpar/GitHubSetUpDemo' target='_blank'
                                class='url'>https://github.com/TwilightSpar/GitHubSetUpDemo</a><span> </span></p>
                        <p><span>*</span><span> [new branch] branch_1_local -&gt; branch_1_remote</span></p>
                        <span>branch &#39;branch_1_local&#39; set up to track &#39;origin/branch_1_remote&#39;.</span>
                        
                    </blockquote>
                    <p><span>because GitHub does not have branch_1_remote, so it will create a new branch</span></p>
                    <p><span>now on my GitHub repository, there is a new branch named
                        </span><code>branch_1_remote</code></p>
                    <h4 id='-r-see-remote-branch'><span>-r see remote branch</span></h4>
                    <p><code>git branch -r</code><span> </span></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>origin/branch_1_remote</span></p>
                    </blockquote>
                    <h4 id='change-branch-name'><span>change branch name</span></h4>
                    <p><code>git branch --move branch_1_local branch_1_local_new</code><span> </span></p>
                    <h4 id='push-new-branch-to-origin'><span>push new branch to origin</span></h4>
                    <p><code>git push -u origin branch_1_local_new:branch_1_remote_new</code><span> </span>
                        <span> </span>
                    </p>
                    <h4 id='delete-old-remote-branch'><span>delete old remote branch</span></h4>
                    <p><code>git push origin --delete branch_1_remote</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>To </span><a href='https://github.com/TwilightSpar/GitHubSetUpDemo' target='_blank'
                                class='url'>https://github.com/TwilightSpar/GitHubSetUpDemo</a><span> </span></p>
                        <p><span>-</span><span> [deleted] branch_1_remote</span>
                        </p>
                    </blockquote>
                    <p><code>git branch -r</code><span> # -r see remote branch</span></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p><span>origin/branch_1_remote_new </span>
                            <span>origin/master</span>
                        </p>
                    </blockquote>
                    <h4 id='to-delete-local-branch-use'><span>To delete local branch use:</span></h4>
                    <ul>
                        <li><code>git branch -d my-branch-name</code><span>, only deletes the branch if it has already
                                been
                                merged</span></li>
                        <li><code>git branch -D my-branch-name</code><span>, force delete</span></li>
                    </ul>
                    <h2 id='merge-branch'><span>merge branch</span></h2>
                    <p><span>suppose we want to merge branch </span><code>branch_1_local_new</code><span> into
                        </span><code>main</code> </p>
                    <p><span>first we need to stay in </span><code>main</code><span> branch</span>
                    </p>
                    <h4 id='lets-make-new-changes-to-branch-1-and-commit-it'><span>Let&#39;s make new changes to branch
                            1 and
                            commit it.</span></h4>
                    <p><code>echo change 3 on branch 1 new &gt; filename3.txt</code></p>
                    <p> <code>git add .</code></p>
                    <p><code>git commit -m &quot;commit 1 on branch new&quot;</code></p>
                    <h4 id='change-to-main-branch'><span>change to main branch </span></h4>
                    <p><code>git checkout master</code></p>
                    <h4 id='merge'><span>merge </span></h4>
                    <p><code>git merge branch_1_local_new</code></p>
                    <p><span>Output:</span></p>
                    <blockquote>
                        <p> <span>Updating c52fbcc..4f41d58 </span></p>
                        <p> <span>Fast-forward </span></p>
                        <p> <span>demo.ipynb | 148 +++++++++++++++++++++++++++++----------------------------- </span>
                        </p>
                        <p> <span>filename3.txt | 1 + </span></p>
                        <p> <span>2 files changed, 75 insertions(+), 74 deletions(-) </span></p>
                        <p> <span>create mode 100644 filename3.txt </span></p>
                    </blockquote>
                    <p>&nbsp;</p>

                </div>
            </div>

        </main>
    </div>
</body>